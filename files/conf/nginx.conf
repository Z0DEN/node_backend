events {
    worker_connections  1024;
}

http {
    include         /etc/nginx/mime.types;
    include         /etc/nginx/conf.d/*.conf;

    # https://github.com/google/ngx_brotli
    brotli_static   on;
    brotli          on;

    # http://nginx.org/en/docs/http/ngx_http_gzip_module.html
    gzip            on;
    gzip_vary       on;
    gzip_proxied    any;

    server {
        listen 80;
        server_name ${HOSTNAME}.whoole.space; 

        # Add Alt-Svc header to negotiate HTTP/3.
        add_header alt-svc 'h3-27=":443"; ma=86400, h3-28=":443"; ma=86400, h3-29=":443"; ma=86400, h3=":443"; ma=86400';

        return 301 https://$host$request_uri;

    }

    server {
        # https://github.com/cloudflare/quiche/tree/master/extras/nginx
        # Enable QUIC and HTTP/3.
        listen 443 quic reuseport;

        # Enable HTTP/2 (optional).
        listen 443 ssl http2;

        server_name ${HOSTNAME}.whoole.space; 
        
        ssl_certificate /certs/fullchain.pem;
        ssl_certificate_key /certs/privkey.pem;

        include /main_files/snippets/ssl-params.conf;

        location / {
    		proxy_pass http://127.0.0.1:8002/;
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    		proxy_cookie_path /myproject/ "/; secure";
	}

        location /static/ {
		alias /main_files/www/static/;
	}

        location /react/ {
    		proxy_pass http://127.0.0.1:3000/;
    		proxy_set_header Host $host;
    		proxy_set_header X-Real-IP $remote_addr;
    		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    		proxy_cookie_path /myproject/ "/; secure";
	}

        ssl_early_data on;

        #proxy_set_header Early-Data $ssl_early_data;

        #if ($host != "${HOSTNAME}.whoole.space") {
        #        return 404;
        #}

        # Add Alt-Svc header to negotiate HTTP/3.
        add_header alt-svc 'h3=":443"; ma=86400';

    }
}
